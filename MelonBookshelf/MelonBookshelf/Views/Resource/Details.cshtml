@using MelonBookshelf.Data
@model ResourceViewModel

<head>
    @{
        ViewData["Title"] = "Resource's details";
        ViewData["Description"] = "Here you can see detailed description of a resource.";
        ViewData["Keywords"] = "resource, details, resource details, details";
        ViewData["Author"] = "Dimitar Rachev";
    }
</head>
<body>
    <div class="row text">
        <div class="col-md-6">
            <p>
                <h1>Resource`s details</h1>
            </p>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">

                        <a class="btn btn-outline-secondary" asp-action="Index">Show All Resources</a>
                    </div>
                    <div class="form-group">
                        <label asp-for="Category" class="control-label"></label>
                        <input asp-for="Category.Name" class="form-control" readonly />
                        <span asp-validation-for="Category.Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Type" class="control-label"></label>
                        <input asp-for="Type" class="form-control" readonly />
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" readonly />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Author" class="control-label"></label>
                        <input asp-for="Author" class="form-control" readonly />
                        <span asp-validation-for="Author" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <input asp-for="Description" class="form-control" readonly />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Price" class="control-label"></label>
                        <input asp-for="Price" class="form-control" readonly />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Invoice" class="control-label"></label>
                        <input asp-for="Invoice" class="form-control" readonly />
                        <span asp-validation-for="Invoice" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DateAdded" class="control-label"></label>
                        <input type="date" asp-for="DateAdded" class="form-control" readonly />
                        <span asp-validation-for="DateAdded" class="text-danger"></span>
                    </div>
                    @if (Model.Type == ResourceType.Physical)
                    {
                        <div class="form-group">
                            <label asp-for="Status" class="control-label"></label>
                            <input asp-for="Status" class="form-control" readonly />
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DateTaken" class="control-label"></label>
                            <input type="date" asp-for="DateTaken" class="form-control" readonly />
                            <span asp-validation-for="DateTaken" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="DateReturn" class="control-label"></label>
                            <input type="date" asp-for="DateReturn" class="form-control" readonly />
                            <span asp-validation-for="DateReturn" class="text-danger"></span>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-12 mt-3">
                <h3>Comments</h3>
                @Html.Partial("_AddComment", Model.ResourceCommentViewModel)
                <hr />
                <div id="comments">
                    @if (Model.ResourceComments != null)
                    {
                        @foreach (var item in Model.ResourceComments)
                        {
                            <div class="comment-item">
                                <div class="comment-header">
                                    <h4>@item.User.UserName</h4>
                                    <p>@item.Comment</p>
                                </div>
                                <div class="comment-actions">
                                    @if (User.Identity.IsAuthenticated && item.User != null && User.Identity.Name == item.User.UserName)
                                    {
                                        <form asp-controller="Resource" asp-action="DeleteComment" method="post">
                                            <input type="hidden" asp-for="ResourceId" />
                                            <button type="submit" class="btn btn-danger btn-sm" asp-route-commentId="@item.CommentId" asp-action="DeleteComment">Delete</button>
                                        </form>
                                        <button class="btn btn-info btn-sm ml-2" onclick="toggleReplyForm(@item.CommentId)">Reply</button>
                                    }
                                </div>
                            </div>
                            <div id="replyForm-@item.CommentId" class="reply-form" style="display:none;">
                                <form asp-controller="Resource" asp-action="AddCommentReply" method="post">
                                    <input type="hidden" asp-for="CommentReplyViewModel.ResourceCommentId" value="@item.CommentId" class="form-control" />
                                    <input asp-for="CommentReplyViewModel.Reply" class="form-control" />
                                    <button type="submit" class="btn btn-primary btn-sm mt-2">Submit Reply</button>
                                </form>
                            </div>
                            @if (item.CommentsReplies != null && item.CommentsReplies.Any())
                            {
                                <div class="replies">
                                    @for (int i = 0; i < Math.Min(3, item.CommentsReplies.Count()); i++)
                                    {
                                        var reply = item.CommentsReplies[i];
                                        <div class="reply-item">
                                            <h6>@reply.User.UserName</h6>
                                            <p>@reply.Reply</p>
                                        </div>
                                    }
                                    @if (item.CommentsReplies.Count() > 3)
                                    {
                                        <button class="show-more-replies-btn" onclick="toggleReplies(@item.CommentId)">Show More Replies</button>
                                    }
                                </div>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    function toggleReplyForm(commentId) {
        var form = document.getElementById(`replyForm-${commentId}`);
        form.style.display = (form.style.display === 'none') ? 'block' : 'none';
    }

    function toggleReplays(commentId) {
        var replays = document.getElementById(`replays-${commentId}`);
        replays.style.display = (replays.style.display === 'none') ? 'block' : 'none';
    }
</script>
<style>

.comment-item {
    border: 1px solid #ccc;
    padding: 10px;
    margin: 10px 0;
    background-color: #f7f7f7;
}

.comment-header {
    font-size: 18px;
    font-weight: bold;
}

.comment-actions {
    margin-top: 10px;
}

.reply-form {
    margin-top: 10px;
    border-top: 1px solid #ccc;
    padding-top: 10px;
}

.reply-item {
    border-top: 1px solid #ccc;
    padding-top: 10px;
    margin-top: 10px;
}

.replies {
    margin-left: 20px;
    border-left: 1px solid #ccc;
    padding-left: 20px;
}
</style>


